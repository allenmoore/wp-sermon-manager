{"version":3,"names":[],"mappings":"","sources":["admin-index.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nvar _MediaUploader = _interopRequireDefault(require(\"./components/admin/MediaUploader\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar mu = new _MediaUploader.default();\nmu.init();\n\n},{\"./components/admin/MediaUploader\":2}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"../../utils\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar MediaUploader =\n/*#__PURE__*/\nfunction () {\n  /**\n   * The MediaUploader constructor.\n   */\n  function MediaUploader() {\n    _classCallCheck(this, MediaUploader);\n\n    this.uploadField = document.getElementById(wpsmImgUploader.key);\n    this.uploadThumb = document.getElementById('wpsm-image-wrapper');\n    this.uploads = [];\n    this.insertObject = this.insertObject.bind(this);\n    this.deleteObject = this.deleteObject.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.handleEvents = this.handleEvents.bind(this);\n  }\n  /**\n   * Method to set the metadata of an object.\n   *\n   * @param {Object} obj - The object.\n   *\n   * @returns {Array} - An array of object metadata.\n   */\n\n\n  _createClass(MediaUploader, [{\n    key: \"setMetaData\",\n    value: function setMetaData(obj) {\n      var metaData;\n      metaData = {\n        edit: obj.changed.editLink,\n        id: obj.id,\n        name: obj.changed.title,\n        src: obj.changed.sizes.thumbnail.url\n      };\n      return metaData;\n    }\n    /**\n     * Method to insert an object into the DOM from the WP Media Uploader.\n     *\n     * @param {Object} frame - The WP Media Uploader object.\n     *\n     * @returns {void}\n     */\n\n  }, {\n    key: \"insertObject\",\n    value: function insertObject(frame) {\n      var selection = frame.state().get('selection'),\n          length = selection.length,\n          objects = selection.models,\n          imgEl = document.createElement('img');\n      var object,\n          objectData = {};\n\n      for (var i = 0; i < length; i++) {\n        object = objects[i];\n        objectData = this.setMetaData(object);\n        this.uploads.push(objectData);\n        this.uploadField.value = objectData.id;\n        imgEl.src = objectData.src;\n        this.uploadThumb.appendChild(imgEl);\n      }\n    }\n    /**\n     * Method to delete an object.\n     *\n     * @param {Object} e - The event object.\n     *\n     * @returns {void}\n     */\n\n  }, {\n    key: \"deleteObject\",\n    value: function deleteObject(e) {\n      var objectId = this.uploadField.value;\n      this.uploads.splice(this.uploads.indexOf(objectId), 1);\n      this.uploadField.value = '';\n      this.uploadThumb.remove();\n      e.preventDefault();\n    }\n    /**\n     * Methos to trigger the WP Media Upload modal.\n     *\n     * @param {Object} e - The event object.\n     *\n     * @returns {void}\n     */\n\n  }, {\n    key: \"openModal\",\n    value: function openModal(e) {\n      var _this = this;\n\n      var frame;\n      frame = wp.media({\n        frame: 'post',\n        title: 'Choose an Image',\n        library: {\n          type: 'image'\n        },\n        multiple: false,\n        button: {\n          text: 'Select Image'\n        }\n      });\n      frame.open();\n      frame.on('insert', function () {\n        _this.insertObject(frame);\n      });\n      e.preventDefault();\n    }\n    /**\n     * Method to handle event propagation.\n     *\n     * @returns {void}\n     */\n\n  }, {\n    key: \"handleEvents\",\n    value: function handleEvents() {\n      var addButton = document.getElementById('wpsm-add-button');\n      var deleteButton = document.getElementById('wpsm-delete-button');\n      addButton.onclick = this.openModal;\n      deleteButton.onclick = this.deleteObject;\n    }\n    /**\n     * Method to initilize the event listeners.\n     *\n     * @returns {void}\n     */\n\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.handleEvents();\n    }\n  }]);\n\n  return MediaUploader;\n}();\n\nvar _default = MediaUploader;\nexports.default = _default;\n\n},{\"../../utils\":3}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getValue = getValue;\nexports.getLength = getLength;\nexports.getModels = getModels;\nexports.setValue = setValue;\n\n/**\n * Function to get the value of a field object.\n *\n * @param {Object} obj - The field object.\n *\n * @returns {string} - The field object's value.\n */\nfunction getValue(obj) {\n  return obj.value;\n}\n/**\n * Function to get an object's length.\n *\n * @param {Object} obj - The object.\n *\n * @returns {*} - The object's length.\n */\n\n\nfunction getLength(obj) {\n  return obj.length;\n}\n/**\n * Function to get an object's models.\n *\n * @param {Object} obj - The object.\n *\n * @returns {*|[]} - The object's models.\n */\n\n\nfunction getModels(obj) {\n  return obj.models;\n}\n/**\n * Function to set the value of a field object.\n *\n * @param {Object} obj - The field object.\n * @param {string} val - The value to set.\n *\n * @returns {string} - The field object's new value.\n */\n\n\nfunction setValue(obj, val) {\n  obj.value = val;\n  return obj.value;\n}\n\n},{}]},{},[1]);\n"],"file":"build.admin.js"}